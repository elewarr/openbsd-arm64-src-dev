Index: sys/arch/arm/include/atomic.h
===================================================================
RCS file: /cvs/src/sys/arch/arm/include/atomic.h,v
retrieving revision 1.19
diff -u -p -r1.19 atomic.h
--- sys/arch/arm/include/atomic.h	29 Aug 2022 02:01:18 -0000	1.19
+++ sys/arch/arm/include/atomic.h	2 Feb 2024 22:34:23 -0000
@@ -234,6 +234,18 @@ _def_atomic_sub_nv(_atomic_sub_long_nv, 
 #define atomic_sub_int_nv(_p, _v) _atomic_sub_int_nv((_p), (_v))
 #define atomic_sub_long_nv(_p, _v) _atomic_sub_long_nv((_p), (_v))
 
+#if defined(CPU_ARMv6)
+
+#define __membar() do { __asm __volatile("" ::: "memory"); } while (0)
+
+#define membar_enter()		__membar()
+#define membar_exit()		__membar()
+#define membar_producer()	__membar()
+#define membar_consumer()	__membar()
+#define membar_sync()		__membar()
+
+#else /* !CPU_ARMv6 */
+
 #define __membar(_f) do { __asm volatile(_f ::: "memory"); } while (0)
 
 #define membar_enter()		__membar("dmb sy")
@@ -242,13 +254,24 @@ _def_atomic_sub_nv(_atomic_sub_long_nv, 
 #define membar_consumer()	__membar("dmb sy")
 #define membar_sync()		__membar("dmb sy")
 
-#if defined(_KERNEL)
+#endif /* !CPU_ARMv6 */
 
+
+#if defined(_KERNEL)
 /* virtio needs MP membars even on SP kernels */
+
+#if defined(CPU_ARMv6)
+#define virtio_membar_producer()	__membar()
+#define virtio_membar_consumer()	__membar()
+#define virtio_membar_sync()		__membar()
+
+#else /* !CPU_ARMv6 */
+
 #define virtio_membar_producer()	__membar("dmb st")
 #define virtio_membar_consumer()	__membar("dmb sy")
 #define virtio_membar_sync()		__membar("dmb sy")
 
+#endif /* !CPU_ARMv6 */
 /*
  * Set bits
  * *p = *p | v
