Index: sys/arch/armv7/stand/efiboot/exec.c
===================================================================
RCS file: /cvs/src/sys/arch/armv7/stand/efiboot/exec.c,v
retrieving revision 1.16
diff -u -p -r1.16 exec.c
--- sys/arch/armv7/stand/efiboot/exec.c	17 May 2020 14:32:12 -0000	1.16
+++ sys/arch/armv7/stand/efiboot/exec.c	2 Feb 2024 22:34:30 -0000
@@ -48,6 +48,7 @@ typedef void (*startfuncp)(void *, void 
 void
 dcache_wbinv_all(void)
 {
+#if defined(CPU_ARMv7)
 	uint32_t clidr;
 	uint32_t ccsidr;
 	uint32_t val;
@@ -55,7 +56,7 @@ dcache_wbinv_all(void)
 	int wshift, sshift;
 	int way, set;
 	int level;
-	
+
 	__asm volatile("mrc p15, 1, %0, c0, c0, 1" : "=r"(clidr));
 	for (level = 0; level < CLIDR_LOC(clidr); level++) {
 		if (CLIDR_CTYPE(clidr, level) == CLIDR_CTYPE_NOCACHE)
@@ -65,7 +66,6 @@ dcache_wbinv_all(void)
 
 		__asm volatile("mcr p15, 2, %0, c0, c0, 0" :: "r"(level << 1));
 		__asm volatile("isb");
-		__asm volatile("mrc p15, 1, %0, c0, c0, 0" : "=r"(ccsidr));
 
 		nways = CCSIDR_ASSOCIATIVITY(ccsidr) + 1;
 		nsets = CCSIDR_NUMSETS(ccsidr) + 1;
@@ -83,15 +83,48 @@ dcache_wbinv_all(void)
 		}
 	}
 
-	__asm volatile("dsb");
+_asm volatile("dsb");
+
+#elif defined(CPU_ARMv6)
+
+
+ __asm__ __volatile__(
+    "mcr p15, 0, %[zero], c7, c10, 4  \n"  // Memory barrier
+    :
+    : [zero]"r" (0)
+    : "memory"
+);
+
+__asm__ __volatile__(
+    "mcr p15, 0, r0, c7, c5, 4     \n"
+    :
+    : "r" (0)
+    : "memory"
+);
+
+#endif /* CPU_ARMv6 */
+
 }
 
 void
 icache_inv_all(void)
 {
 	__asm volatile("mcr p15, 0, r0, c7, c5, 0"); /* ICIALLU */
-	__asm volatile("dsb");
-	__asm volatile("isb");
+//	__asm volatile("dsb");
+__asm__ __volatile__(
+    "mcr p15, 0, %[zero], c7, c10, 4  \n"  // Memory barrier
+    :
+    : [zero]"r" (0)
+    : "memory"
+);
+
+//_asm volatile("isb");
+		__asm__ __volatile__(
+            "mcr p15, 0, r0, c7, c5, 4     \n"
+            :
+            : "r" (0)
+            : "memory"
+        );
 }
 
 void
@@ -102,8 +135,21 @@ dcache_disable(void)
 	__asm volatile("mrc p15, 0, %0, c1, c0, 0" : "=r"(sctlr));
 	sctlr &= ~CPU_CONTROL_DC_ENABLE;
 	__asm volatile("mcr p15, 0, %0, c1, c0, 0" :: "r"(sctlr));
-	__asm volatile("dsb");
-	__asm volatile("isb");
+//	__asm volatile("dsb");
+__asm__ __volatile__(
+    "mcr p15, 0, %[zero], c7, c10, 4  \n"  // Memory barrier
+    :
+    : [zero]"r" (0)
+    : "memory"
+);
+
+//	__asm volatile("isb");
+__asm__ __volatile__(
+            "mcr p15, 0, r0, c7, c5, 4     \n"
+            :
+            : "r" (0)
+            : "memory"
+        );
 }
 
 void
@@ -114,8 +160,22 @@ icache_disable(void)
 	__asm volatile("mrc p15, 0, %0, c1, c0, 0" : "=r"(sctlr));
 	sctlr &= ~CPU_CONTROL_IC_ENABLE;
 	__asm volatile("mcr p15, 0, %0, c1, c0, 0" :: "r"(sctlr));
-	__asm volatile("dsb");
-	__asm volatile("isb");
+//	__asm volatile("dsb");
+__asm__ __volatile__(
+    "mcr p15, 0, %[zero], c7, c10, 4  \n"  // Memory barrier
+    :
+    : [zero]"r" (0)
+    : "memory"
+);
+
+//	__asm volatile("isb");
+__asm__ __volatile__(
+            "mcr p15, 0, r0, c7, c5, 4     \n"
+            :
+            : "r" (0)
+            : "memory"
+        );
+
 }
 
 void
@@ -129,8 +189,22 @@ mmu_disable(void)
 
 	__asm volatile("mcr p15, 0, r0, c8, c7, 0"); /* TLBIALL */
 	__asm volatile("mcr p15, 0, r0, c7, c5, 6"); /* BPIALL */
-	__asm volatile("dsb");
-	__asm volatile("isb");
+//	__asm volatile("dsb");
+__asm__ __volatile__(
+    "mcr p15, 0, %[zero], c7, c10, 4  \n"  // Memory barrier
+    :
+    : [zero]"r" (0)
+    : "memory"
+);
+
+//	__asm volatile("isb");
+__asm__ __volatile__(
+            "mcr p15, 0, r0, c7, c5, 4     \n"
+            :
+            : "r" (0)
+            : "memory"
+        );
+
 }
 
 void
