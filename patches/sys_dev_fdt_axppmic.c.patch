Index: sys/dev/fdt/axppmic.c
===================================================================
RCS file: /cvs/src/sys/dev/fdt/axppmic.c,v
retrieving revision 1.6
diff -u -p -r1.6 axppmic.c
--- sys/dev/fdt/axppmic.c	10 Feb 2018 22:32:01 -0000	1.6
+++ sys/dev/fdt/axppmic.c	1 Aug 2019 07:57:08 -0000
@@ -256,6 +256,9 @@ struct axppmic_sensdata axp221_sensdata[
 struct axppmic_sensdata axp803_sensdata[] = {
 	{ "ACIN", SENSOR_INDICATOR, 0x00, (1 << 7), (1 << 6) },
 	{ "VBUS", SENSOR_INDICATOR, 0x00, (1 << 5), (1 << 4) },
+	{ "battery present", SENSOR_INDICATOR, 0x01, (1 << 5), (1 << 4) },
+	{ "battery charging", SENSOR_INDICATOR, 0x01, (1 << 6), (1 << 6) },
+	{ "battery percent", SENSOR_PERCENT, 0xb9, ( 0x7f ), (1 << 7) },
 	{ "", SENSOR_TEMP, 0x56, 5450000, 106250 },
 	{ NULL }
 };
@@ -629,6 +632,7 @@ axppmic_enable(void *cookie, int on)
 
 void	axppmic_update_sensors(void *);
 void	axppmic_update_indicator(struct axppmic_softc *, int);
+void  axppmic_update_percent(struct axppmic_softc *, int);
 void	axppmic_update_sensor(struct axppmic_softc *, int);
 
 void
@@ -665,6 +669,8 @@ axppmic_update_sensors(void *arg)
 	for (i = 0; sc->sc_sensdata[i].name; i++) {
 		if (sc->sc_sensdata[i].type == SENSOR_INDICATOR)
 			axppmic_update_indicator(sc, i);
+		else if(sc->sc_sensdata[i].type == SENSOR_PERCENT)
+      axppmic_update_percent(sc, i);
 		else
 			axppmic_update_sensor(sc, i);
 	}
@@ -680,6 +686,24 @@ axppmic_update_indicator(struct axppmic_
 
 	value = axppmic_read_reg(sc, reg);
 	sc->sc_sensor[i].value = (value & mask) ? 1 : 0;
+	if (value & mask) {
+		sc->sc_sensor[i].status =
+		    (value & mask_ok) ? SENSOR_S_OK : SENSOR_S_WARN;
+	} else {
+		sc->sc_sensor[i].status = SENSOR_S_UNSPEC;
+	}
+}
+
+void
+axppmic_update_percent(struct axppmic_softc *sc, int i)
+{
+	uint8_t reg = sc->sc_sensdata[i].reg;
+	uint8_t mask = sc->sc_sensdata[i].base;
+	uint8_t mask_ok = sc->sc_sensdata[i].delta;
+	uint8_t value;
+
+	value = axppmic_read_reg(sc, reg);
+	sc->sc_sensor[i].value = (value & mask) * 1000;
 	if (value & mask) {
 		sc->sc_sensor[i].status =
 		    (value & mask_ok) ? SENSOR_S_OK : SENSOR_S_WARN;
